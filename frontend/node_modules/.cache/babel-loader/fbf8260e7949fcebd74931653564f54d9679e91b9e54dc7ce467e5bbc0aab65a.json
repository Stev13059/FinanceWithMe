{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reqLoginAPI, reqRegisterAPI } from '@/api/api';\nexport default {\n  name: 'Login',\n  props: ['type'],\n  data() {\n    return {\n      form: this.$form.createForm(this, {\n        name: 'coordinated'\n      }),\n      btnLoading: false\n    };\n  },\n  mounted() {},\n  methods: {\n    login(values) {\n      this.btnLoading = true;\n      if (this.type === 'login') {\n        reqLoginAPI(values).then(res => {\n          if (!res.userId) return;\n          localStorage.setItem('userId', res.userId);\n          localStorage.setItem('username', values.username);\n          this.$message.success('Login successful');\n          this.$router.push('/');\n        }).finally(() => {\n          this.btnLoading = false;\n        });\n      } else {\n        reqRegisterAPI(values).then(() => {\n          this.$router.push('/login');\n          this.$message.success('Register successful');\n        }).finally(() => {\n          this.btnLoading = false;\n        });\n      }\n    },\n    handleSubmit() {\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          this.login(values);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["reqLoginAPI","reqRegisterAPI","name","props","data","form","$form","createForm","btnLoading","mounted","methods","login","values","type","then","res","userId","localStorage","setItem","username","$message","success","$router","push","finally","handleSubmit","validateFields","err"],"sources":["src/views/user/components/LoginForm.vue"],"sourcesContent":["<script>\r\nimport { reqLoginAPI, reqRegisterAPI } from '@/api/api'\r\nexport default {\r\n  name: 'Login',\r\n  props: ['type'],\r\n  data() {\r\n    return {\r\n      form: this.$form.createForm(this, { name: 'coordinated' }),\r\n      btnLoading: false\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n  },\r\n  methods: {\r\n    login(values) {\r\n      this.btnLoading = true\r\n      if (this.type === 'login') {\r\n        reqLoginAPI(values).then((res) => {\r\n          if (!res.userId) return\r\n          localStorage.setItem('userId', res.userId)\r\n          localStorage.setItem('username', values.username)\r\n          this.$message.success('Login successful');\r\n          this.$router.push('/')\r\n        }).finally(() => {\r\n          this.btnLoading = false\r\n        })\r\n      } else {\r\n        reqRegisterAPI(values).then(() => {\r\n          this.$router.push('/login')\r\n          this.$message.success('Register successful');\r\n        }).finally(() => {\r\n          this.btnLoading = false\r\n        })\r\n      }\r\n    },\r\n    handleSubmit() {\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          this.login(values)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<template>\r\n  <div style=\"padding-left: 100px\">\r\n    <a-row>\r\n      <a-col :span=\"12\">\r\n        <div class=\"bgimg\"></div>\r\n      </a-col>\r\n      <a-col :span=\"12\" class=\"loginRIght\">\r\n        <div class=\"login_header\">\r\n          <img src=\"@/assets/images/logo.png\" alt=\"\">\r\n          <span>{{ type === 'login' ? 'Finance With Me' : 'Sign Up' }}</span>\r\n        </div>\r\n        <div class=\"login_form\">\r\n          <a-form @submit=\"handleSubmit\" :form=form>\r\n            <a-form-item>\r\n              <span>Username</span>\r\n              <a-input\r\n                v-decorator=\"['username', { rules: [{ required: true, message: 'Please enter your account number!' }] }]\"\r\n                placeholder=\"username\"></a-input>\r\n            </a-form-item>\r\n            <a-form-item>\r\n              <span>Password</span>\r\n              <a-input\r\n                v-decorator=\"['password', { rules: [{ required: true, message: 'Please enter your password!' }] }]\"\r\n                type=\"password\" placeholder=\"password\"></a-input>\r\n            </a-form-item>\r\n            <a-button size=\"large\" @click=\"handleSubmit\" :loading=\"btnLoading\">{{ type === 'login' ? 'Login' :\r\n              'Sign Up' }}</a-button>\r\n          </a-form>\r\n        </div>\r\n        <div class=\"login_footer\" v-if=\"type === 'login'\">\r\n          <div style=\"width: 100%;display: flex;\">\r\n            <span class=link-left></span>\r\n            <span>Don't have an account?</span>\r\n            <span class=\"link-right\"></span>\r\n          </div>\r\n          <a-button size=\"large\" @click=\"$router.push('/register')\">Sign\r\n            Up</a-button>\r\n        </div>\r\n      </a-col>\r\n    </a-row>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"less\">\r\nbody {\r\n  span {\r\n    color: #0981d6;\r\n    font-weight: 400;\r\n\r\n  }\r\n\r\n  .bgimg {\r\n    height: 100vh;\r\n    background: url('@/assets/images/login-bg.png') no-repeat;\r\n    background-size: contain;\r\n  }\r\n\r\n  .loginRIght {\r\n    padding-top: 70px;\r\n    padding-bottom: 70px;\r\n\r\n    >div {\r\n      margin: auto;\r\n      width: 60%;\r\n\r\n    }\r\n\r\n    .login_form {\r\n      span {\r\n        font-size: 20px;\r\n      }\r\n\r\n      .ant-form-item {\r\n        margin-top: 70px;\r\n\r\n        .ant-input {\r\n          margin-top: 30px;\r\n          outline: none;\r\n          height: 50px;\r\n          border: none;\r\n          border-bottom: 1px solid #ccc;\r\n        }\r\n      }\r\n\r\n      .ant-btn {\r\n        margin: 30px 50%;\r\n        padding-left: 25px;\r\n        padding-right: 25px;\r\n        outline: none;\r\n        border: none;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        background-color: #54bcbd;\r\n        border-radius: 10px;\r\n        transform: translateX(-50%);\r\n        box-shadow: 1px 1px 5px #2a2727\r\n      }\r\n    }\r\n\r\n    .login_header {\r\n      img {\r\n        width: 80px;\r\n        height: 80px;\r\n        object-fit: contain;\r\n      }\r\n\r\n      span {\r\n        margin-left: 40px;\r\n        font-size: 50px;\r\n        vertical-align: middle;\r\n      }\r\n    }\r\n\r\n    .login_footer {\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      height: 120px;\r\n\r\n      .link-left {\r\n        flex: 1;\r\n        height: 1px;\r\n        border-top: solid #ACC0D8 1px;\r\n        transform: translateY(10px);\r\n      }\r\n\r\n      .link-right {\r\n        flex: 1;\r\n        height: 1px;\r\n        border-top: solid #ACC0D8 1px;\r\n        transform: translateY(10px);\r\n\r\n      }\r\n\r\n      button {\r\n        color: #54bcbd;\r\n        border-radius: 5px;\r\n        box-shadow: 0 0 5px #ccc;\r\n        font-size: 20px;\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":";AACA,SAAAA,WAAA,EAAAC,cAAA;AACA;EACAC,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,IAAA,OAAAC,KAAA,CAAAC,UAAA;QAAAL,IAAA;MAAA;MACAM,UAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,MAAAC,MAAA;MACA,KAAAJ,UAAA;MACA,SAAAK,IAAA;QACAb,WAAA,CAAAY,MAAA,EAAAE,IAAA,CAAAC,GAAA;UACA,KAAAA,GAAA,CAAAC,MAAA;UACAC,YAAA,CAAAC,OAAA,WAAAH,GAAA,CAAAC,MAAA;UACAC,YAAA,CAAAC,OAAA,aAAAN,MAAA,CAAAO,QAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA,GAAAC,OAAA;UACA,KAAAhB,UAAA;QACA;MACA;QACAP,cAAA,CAAAW,MAAA,EAAAE,IAAA;UACA,KAAAQ,OAAA,CAAAC,IAAA;UACA,KAAAH,QAAA,CAAAC,OAAA;QACA,GAAAG,OAAA;UACA,KAAAhB,UAAA;QACA;MACA;IACA;IACAiB,aAAA;MACA,KAAApB,IAAA,CAAAqB,cAAA,EAAAC,GAAA,EAAAf,MAAA;QACA,KAAAe,GAAA;UACA,KAAAhB,KAAA,CAAAC,MAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}