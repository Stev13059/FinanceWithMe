{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'EchartsPie',\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    initPieEcharts() {\n      const option = {\n        title: {\n          text: 'Expenses',\n          left: 'left center',\n          textStyle: {\n            color: 'red'\n          }\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          show: false\n        },\n        toolbox: {\n          show: false,\n          feature: {\n            mark: {\n              show: true\n            },\n            dataView: {\n              show: false,\n              readOnly: false\n            },\n            restore: {\n              show: false\n            },\n            saveAsImage: {\n              show: false\n            }\n          }\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: '50%',\n          label: {\n            show: true\n          },\n          data: this.chartData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      this.myChart = echarts.init(document.getElementById(\"mychart\"));\n      this.myChart.setOption(option);\n      // Adjust the chart with screen size\n      window.addEventListener(\"resize\", () => {\n        this.myChart.resize();\n      });\n    }\n  },\n  mounted() {\n    this.initPieEcharts();\n  },\n  data() {\n    return {\n      myChart: {}\n    };\n  }\n};","map":{"version":3,"names":["echarts","name","props","chartData","type","Array","default","methods","initPieEcharts","option","title","text","left","textStyle","color","tooltip","trigger","legend","show","toolbox","feature","mark","dataView","readOnly","restore","saveAsImage","series","radius","label","data","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","myChart","init","document","getElementById","setOption","window","addEventListener","resize","mounted"],"sources":["src/views/analytics/components/EchartsPie.vue"],"sourcesContent":["<script>\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n  name: 'EchartsPie',\r\n  props: {\r\n    chartData: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  methods: {\r\n    initPieEcharts() {\r\n      const option = {\r\n        title: {\r\n          text: 'Expenses',\r\n          left: 'left center',\r\n          textStyle: {\r\n            color: 'red'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          show: false\r\n        },\r\n        toolbox: {\r\n          show: false,\r\n          feature: {\r\n            mark: { show: true },\r\n            dataView: { show: false, readOnly: false },\r\n            restore: { show: false },\r\n            saveAsImage: { show: false }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Access From',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            label: {\r\n              show: true\r\n            },\r\n            data: this.chartData,\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.myChart = echarts.init(document.getElementById(\"mychart\"));\r\n      this.myChart.setOption(option);\r\n      // Adjust the chart with screen size\r\n      window.addEventListener(\"resize\", () => {\r\n        this.myChart.resize();\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initPieEcharts()\r\n  },\r\n  data() {\r\n    return {\r\n      myChart: {},\r\n\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div style=\"padding:20px;\">\r\n    <div class=\"echart\" id=\"mychart\" style=\"width: 80%;\r\n    height: 380px;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>"],"mappings":"AACA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,MAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,IAAA;UACAC,SAAA;YACAC,KAAA;UACA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAD,IAAA;UACAE,OAAA;YACAC,IAAA;cAAAH,IAAA;YAAA;YACAI,QAAA;cAAAJ,IAAA;cAAAK,QAAA;YAAA;YACAC,OAAA;cAAAN,IAAA;YAAA;YACAO,WAAA;cAAAP,IAAA;YAAA;UACA;QACA;QACAQ,MAAA,GACA;UACAzB,IAAA;UACAG,IAAA;UACAuB,MAAA;UACAC,KAAA;YACAV,IAAA;UACA;UACAW,IAAA,OAAA1B,SAAA;UACA2B,QAAA;YACAC,SAAA;cACAC,UAAA;cACAC,aAAA;cACAC,WAAA;YACA;UACA;QACA;MAEA;MACA,KAAAC,OAAA,GAAAnC,OAAA,CAAAoC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,KAAAH,OAAA,CAAAI,SAAA,CAAA9B,MAAA;MACA;MACA+B,MAAA,CAAAC,gBAAA;QACA,KAAAN,OAAA,CAAAO,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAnC,cAAA;EACA;EACAqB,KAAA;IACA;MACAM,OAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}