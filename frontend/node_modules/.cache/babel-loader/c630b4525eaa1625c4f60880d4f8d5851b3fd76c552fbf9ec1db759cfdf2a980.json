{"ast":null,"code":"import { transaction_add, transaction_edit } from '@/api/api';\nexport default {\n  name: 'Modal',\n  data() {\n    return {\n      visible: false,\n      btnLoading: false,\n      form: this.$form.createForm(this, {\n        name: 'coordinated'\n      }),\n      formData: {},\n      type: [{\n        name: 'Food'\n      }, {\n        name: 'Transport'\n      }, {\n        name: 'Healthcare'\n      }, {\n        name: 'Education'\n      }, {\n        name: 'Shopping'\n      }, {\n        name: 'Entertainment'\n      }, {\n        name: 'Bill'\n      }, {\n        name: 'Other'\n      }]\n    };\n  },\n  methods: {\n    handleSubmit() {\n      let res;\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          res = values;\n        }\n      });\n      return res;\n    },\n    onSubmit() {\n      let date = new Date();\n      let day = date.getDate();\n      let month = date.getMonth() + 1;\n      let year = date.getFullYear();\n      let ukFormat = `${day}/${month}/${year}`;\n      const res = this.handleSubmit();\n      if (res) {\n        this.btnLoading = true;\n        if (this.formData.id) {\n          transaction_edit({\n            ...this.formData,\n            ...res,\n            date: ukFormat\n          }).then(() => {\n            this.visible = false;\n            this.$message.success('Edited successfully');\n            this.$emit('submitOK');\n          }).finally(() => {\n            this.btnLoading = false;\n          });\n        } else {\n          transaction_add({\n            ...this.formData,\n            ...res,\n            date: ukFormat\n          }).then(() => {\n            this.visible = false;\n            this.$message.success('Added successfully');\n            this.$emit('submitOK');\n          }).finally(() => {\n            this.btnLoading = false;\n          });\n        }\n      }\n    }\n  },\n  mounted() {}\n};","map":{"version":3,"names":["transaction_add","transaction_edit","name","data","visible","btnLoading","form","$form","createForm","formData","type","methods","handleSubmit","res","validateFields","err","values","onSubmit","date","Date","day","getDate","month","getMonth","year","getFullYear","ukFormat","id","then","$message","success","$emit","finally","mounted"],"sources":["src/views/transactions/components/Modal.vue"],"sourcesContent":["<script>\r\nimport { transaction_add, transaction_edit} from '@/api/api'\r\n\r\nexport default {\r\n  name: 'Modal',\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      btnLoading: false,\r\n      form: this.$form.createForm(this, { name: 'coordinated' }),\r\n      formData: {},\r\n      type: [\r\n        {\r\n          name: 'Food'\r\n        },\r\n        {\r\n          name: 'Transport'\r\n        },\r\n        {\r\n          name: 'Healthcare'\r\n        },\r\n        {\r\n          name: 'Education'\r\n        },\r\n        {\r\n          name: 'Shopping'\r\n        },\r\n        {\r\n          name: 'Entertainment'\r\n        },\r\n        {\r\n          name: 'Bill'\r\n        },\r\n        {\r\n          name: 'Other'\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      let res\r\n      this.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          res = values\r\n        }\r\n      });\r\n      return res\r\n    },\r\n    onSubmit() {\r\n      let date = new Date();\r\n      let day = date.getDate();\r\n      let month = date.getMonth() + 1;\r\n      let year = date.getFullYear();\r\n      let ukFormat = `${day}/${month}/${year}`;\r\n      const res = this.handleSubmit()\r\n      if (res) {\r\n        this.btnLoading = true\r\n        if (this.formData.id) {\r\n          transaction_edit({ ...this.formData, ...res, date: ukFormat }).then(() => {\r\n            this.visible = false\r\n            this.$message.success('Edited successfully');\r\n            this.$emit('submitOK')\r\n          }).finally(() => {\r\n            this.btnLoading = false\r\n          })\r\n        } else {\r\n          transaction_add({ ...this.formData, ...res, date: ukFormat }).then(() => {\r\n            this.visible = false\r\n            this.$message.success('Added successfully');\r\n            this.$emit('submitOK')\r\n          }).finally(() => {\r\n            this.btnLoading = false\r\n          })\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<template>\r\n  <div>\r\n    <a-modal :title=\"formData.transactionType == 1 ? 'Income' : 'Expense'\" v-model=\"visible\" @ok=\"onSubmit\" :confirmLoading=\"btnLoading\">\r\n      <a-form :form=\"form\" :label-col=\"{ span: 4 }\" :wrapper-col=\"{ span: 18 }\" @submit=\"handleSubmit\">\r\n        <a-form-item v-if=\"formData.transactionType == 2\" label=\"Type\">\r\n          <a-select style=\"width: 120px\"\r\n            v-decorator=\"['type', { initialValue: type[0].name, rules: [{ required: true, message: 'Please select your gender!' }] },]\">\r\n            <a-select-option :value=\"item.name\" v-for=\"item in type\" :key=\"item.name\">\r\n              {{ item.name }}\r\n            </a-select-option>\r\n          </a-select>\r\n        </a-form-item>\r\n        <a-form-item label=\"Details\">\r\n          <a-input placeholder=\"Please enter Details\"\r\n            v-decorator=\"['name', { rules: [{ required: true, message: 'Please input your details!' }] }]\"></a-input>\r\n        </a-form-item>\r\n        <a-form-item label=\"Amount\">\r\n          <a-input placeholder=\"Please enter Amount\" type=\"number\"\r\n            v-decorator=\"['amount', { rules: [{ required: true, message: 'Please input your amount!' }] }]\"></a-input>\r\n        </a-form-item>\r\n      </a-form>\r\n    </a-modal>\r\n  </div>\r\n</template>\r\n\r\n<style scoped></style>"],"mappings":"AACA,SAAAA,eAAA,EAAAC,gBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,UAAA;MACAC,IAAA,OAAAC,KAAA,CAAAC,UAAA;QAAAN,IAAA;MAAA;MACAO,QAAA;MACAC,IAAA,GACA;QACAR,IAAA;MACA,GACA;QACAA,IAAA;MACA,GACA;QACAA,IAAA;MACA,GACA;QACAA,IAAA;MACA,GACA;QACAA,IAAA;MACA,GACA;QACAA,IAAA;MACA,GACA;QACAA,IAAA;MACA,GACA;QACAA,IAAA;MACA;IAEA;EACA;EACAS,OAAA;IACAC,aAAA;MACA,IAAAC,GAAA;MACA,KAAAP,IAAA,CAAAQ,cAAA,EAAAC,GAAA,EAAAC,MAAA;QACA,KAAAD,GAAA;UACAF,GAAA,GAAAG,MAAA;QACA;MACA;MACA,OAAAH,GAAA;IACA;IACAI,SAAA;MACA,IAAAC,IAAA,OAAAC,IAAA;MACA,IAAAC,GAAA,GAAAF,IAAA,CAAAG,OAAA;MACA,IAAAC,KAAA,GAAAJ,IAAA,CAAAK,QAAA;MACA,IAAAC,IAAA,GAAAN,IAAA,CAAAO,WAAA;MACA,IAAAC,QAAA,MAAAN,GAAA,IAAAE,KAAA,IAAAE,IAAA;MACA,MAAAX,GAAA,QAAAD,YAAA;MACA,IAAAC,GAAA;QACA,KAAAR,UAAA;QACA,SAAAI,QAAA,CAAAkB,EAAA;UACA1B,gBAAA;YAAA,QAAAQ,QAAA;YAAA,GAAAI,GAAA;YAAAK,IAAA,EAAAQ;UAAA,GAAAE,IAAA;YACA,KAAAxB,OAAA;YACA,KAAAyB,QAAA,CAAAC,OAAA;YACA,KAAAC,KAAA;UACA,GAAAC,OAAA;YACA,KAAA3B,UAAA;UACA;QACA;UACAL,eAAA;YAAA,QAAAS,QAAA;YAAA,GAAAI,GAAA;YAAAK,IAAA,EAAAQ;UAAA,GAAAE,IAAA;YACA,KAAAxB,OAAA;YACA,KAAAyB,QAAA,CAAAC,OAAA;YACA,KAAAC,KAAA;UACA,GAAAC,OAAA;YACA,KAAA3B,UAAA;UACA;QACA;MACA;IACA;EACA;EACA4B,QAAA,GACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}